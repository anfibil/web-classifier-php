{% extends 'base.html.twig' %}
{% block stylesheets %}
    {% stylesheets
    'assets/css/plugins/iCheck/custom.css'
    'assets/css/plugins/steps/jquery.steps.css'
    'assets/css/plugins/noUiSlider/jquery.nouislider.css'
    'assets/css/plugins/qTip/jquery.qtip.css'
    %}
    <link type="text/css" rel="stylesheet" href="{{ asset_url }}"/>
    {% endstylesheets %}
{% endblock %}
{% block body %}
<br></<br/>
<br></<br/>
<div class="row">
	<div class="col-lg-10 col-lg-offset-1">
		<div class="ibox">
			<div class="ibox-title">
				<h5>Analysis</h5>
			</div>
			<div class="ibox-content">
				<h2> Configure Your Analysis Parameters </h2>
				<form id="form" action="#" class="wizard-big">
					<h1>Dataset</h1>
					<section>
						<h2>Select the dataset:</h2>
						<div class="row">
							<div class="col-lg-5">
								<div class="form-group">
									<select id="dataset" name="dataset" class="form-control required">
									{% for dataset in datasets %}
                                        <option value={{ dataset.id|e }}>{{ dataset.name|e }}</option>
                                    {% endfor %}
									</select>
								</div>
							</div>
							<div class="col-lg-5 col-lg-offset-1">
								Add dataset description here.
							</div>
						</div>
					</section>
					<h1>Model</h1>
					<section>
						<h2>Select the Model:</h2>
						<div class="row">
							<div class="col-lg-5">
								<div class="form-group">
									<select id="model" name="model" class="form-control required">
									{% for model in models %}
                                        <option value={{ model.id|e }}>{{ model.name|e }}</option>
                                    {% endfor %}
									</select>
								</div>
							</div>
							<div class="col-lg-7">
							    <div class="ibox float-e-margins">
							        <div class="description-box ibox-content p-m" id="model-description">
                                        <div id="model-descriptions">
                                        {% for model in models %}
                                            <div id="model-description-{{ model.id|e }}" style="display: none"> {{ model.description|raw}}</div>
                                        {% endfor %}
                                    </div>
                                    </div>
                                </div>
							</div>
						</div>
					</section>
					<h1>Parameters</h1>
					<section data-mode="async">
					</section>
					<h1>Finish</h1>
					<section>
						<h2>Terms and Conditions</h2>
						<input id="acceptTerms" name="acceptTerms" type="checkbox" class="required">
						<label for="acceptTerms">I agree with the Terms and Conditions.</label>
					</section>
				</form>
			</div>
		</div>
	</div>
</div>

{% endblock %}
{% block scripts %}
    {{ parent() }}
    {% javascripts
    'assets/js/plugins/steps/jquery.steps.js'
    'assets/js/plugins/validate/jquery.validate.min.js'
    'assets/js/plugins/noUiSlider/jquery.nouislider.all.js'
    'assets/js/plugins/qTip/jquery.qtip.js'
    %}
    <script type="text/javascript" src="{{ asset_url }}"></script>
{% endjavascripts %}
    <script>
        // Reference: https://github.com/rstaib/jquery-steps/wiki (lots of options to customize this form)
        $(document).ready(function(){
            $("#wizard").steps();
            $("#form").steps({
                bodyTag: "section",
                showFinishButtonAlways: false, // Not working
                onStepChanging: function (event, currentIndex, newIndex)
                {
                    // Always allow going backward even if the current step contains invalid fields!
                    if (currentIndex > newIndex)
                    {
                        return true;
                    }

                    //Fills in information for second step based on dataset choice
                    if (currentIndex === 1) {
                        $("#form").steps("remove", 2);
                        $("#form").steps("insert", 2, {
                            title: "Parameters",
                            contentMode: "async",
                            contentUrl: "/analysis/getmodelform?modelid="+ $("#model").val()+"&datasetid="+$("#dataset").val()
                        });
                    }

                    var form = $(this);

                    // Clean up if user went backward before
                    if (currentIndex < newIndex)
                    {
                        // To remove error styles
                        $(".body:eq(" + newIndex + ") label.error", form).remove();
                        $(".body:eq(" + newIndex + ") .error", form).removeClass("error");
                    }

                    // Disable validation on fields that are disabled or hidden.
                    form.validate().settings.ignore = ":disabled,:hidden";

                    // Start validation; Prevent going forward if false
                    return form.valid();
                },
                onFinishing: function (event, currentIndex)
                {
                    var form = $(this);

                    // Disable validation on fields that are disabled.
                    // At this point it's recommended to do an overall check (mean ignoring only disabled fields)
                    form.validate().settings.ignore = ":disabled";

                    // Start validation; Prevent form submission if false
                    return form.valid();
                },
                onFinished: function (event, currentIndex)
                {
                    var form = $(this);

                    submitForm(form.serialize());
                }
            }).validate({
                errorPlacement: function (error, element)
                {
                    element.before(error);
                }
            });

            $("#model").change(function(){
                $("#model-description-" + this.value).show().siblings().hide();
            });

            $("#model").change();

        });

        function submitForm(params){
            window.location.href = '/analysis/run?'+params;
        }

    </script>

    <!-- iCheck plugin -->
    <script src="{{ asset('assets/js/plugins/iCheck/icheck.js') }}"></script>

{% endblock %}